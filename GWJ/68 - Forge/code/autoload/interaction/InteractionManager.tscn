[gd_scene load_steps=3 format=3 uid="uid://d1debc3b82q1e"]

[ext_resource type="Script" path="res://addons/awesome_input_icons/classes/InputIconSprite2D.gd" id="2_8oa3o"]

[sub_resource type="GDScript" id="GDScript_m7sit"]
script/source = "extends Node2D

@onready var icon = $icon

var interactAction =  InputMap.action_get_events(\"interact\")[0].as_text()[0]
var interactableQueue : Array[InteractArea]= []
var currInteractable : InteractArea
var canInteract = true
var onInteractionMode = false

func registerInteraction(interactable : InteractArea):
	interactableQueue.push_back(interactable)

func unregisterInteraction(interactable : InteractArea):
	var index = interactableQueue.find(interactable)
	if index != -1:
		interactableQueue.remove_at(index)

func startInteractionMode(interactable : InteractArea):
	onInteractionMode = true
	#InputManager.setLimit(InputManager.PlayerInputLimit.CONTROL_ONLY)
	currInteractable = interactable
	
func _physics_process(_delta: float) -> void:
	if onInteractionMode:
		currInteractable.handleInteraction()
		
func _process(_delta):
	if !onInteractionMode:	
		if interactableQueue.size() > 0 && canInteract:
			interactableQueue.sort_custom(_sortInteractables)
			icon.visible = true
		else:
			icon.visible = false
	if icon.visible:
		if interactableQueue.size() > 0 && canInteract:
			interactableQueue.sort_custom(_sortInteractables)
			
			var interactable = interactableQueue[0]
			self.global_position = interactable.global_position
			self.z_index = 1000
			self.global_position.y -= 64
			icon.visible = true
		else:
			icon.visible = false

func _sortInteractables(objA : InteractArea, objB : InteractArea):
	var player = LevelManager.player
	var distA = abs(player.position - objA.global_position)
	var distB = abs(player.global_position - objB.global_position)
	if distA == distB:
		var priorityA = objA.priority
		var priorityB = objB.priority
		return priorityA > priorityB
	else: return distA < distB
	
		
func _input(event):
	if event.is_action_pressed(\"interact\"): # End interaction with Environment Interactable path
		# Call exit handler and ends the current interaction
		if onInteractionMode:
			onInteractionMode = false
			await currInteractable.exitInteraction()
			currInteractable = null
		else: # Normal path
			if canInteract && interactableQueue.size() > 0:
				canInteract = false
				var interactable = interactableQueue[0]
				
				# Not toggle only - start interaction handling
				if !interactable.toggle_only:
					onInteractionMode = true
					currInteractable = interactable
					
				await interactable.interact()
				canInteract = true	
"

[node name="InteractionManager" type="Node2D"]
script = SubResource("GDScript_m7sit")

[node name="icon" type="Sprite2D" parent="."]
script = ExtResource("2_8oa3o")
action_name = &"interact"
